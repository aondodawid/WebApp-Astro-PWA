---
export interface Props {
  btnText?: string;
  style?: object;
  hideSvg?: boolean;
  responsiveStyles?: {
    matchMedia: string;
    styles: object;
  };
}

const beginStyles = {
  background: "linear-gradient(135deg, #4361ee, #3a0ca3)",
  color: "white",
  border: "none",
  borderRadius: "10px",
  padding: "14px 28px",
  fontSize: "17px",
  fontWeight: "600",
  cursor: "pointer",
  transition: "all 0.25s ease",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  gap: "10px",
  margin: "0 auto",
  boxShadow: "0 4px 12px rgba(74, 97, 238, 0.2)",
};

const { btnText, responsiveStyles, hideSvg, style = beginStyles } = Astro.props as Props;

if (responsiveStyles?.matchMedia) {
  const mql = window.matchMedia(responsiveStyles.matchMedia);
  if (mql.matches) {
    Object.assign(style, responsiveStyles.styles);
  }
}
---

<button id="install" class="install-button" hidden="true" style={style}>
  {
    !hideSvg && (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="download-icon"
      >
        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
        <polyline points="7 10 12 15 17 10" />
        <line x1="12" y1="15" x2="12" y2="3" />
      </svg>
    )
  }
  <span>{btnText}</span>
</button>

<style>
  .download-icon {
    margin-right: 2px;
  }
</style>
